plugins {
    id 'java'
    id 'jacoco'
    id 'io.qameta.allure' version '2.10.0'
}

group = 'ru.pstest'
version = '1.0-SNAPSHOT'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set("2.19.0") //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testImplementation "org.assertj:assertj-core:3.24.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "org.mockito:mockito-core:5.4.0"
    testImplementation "org.mockito:mockito-junit-jupiter:3.9.0"
    testImplementation "com.codeborne:selenide:7.0.4"
    testImplementation "io.qameta.allure:allure-selenide:2.23.0"
    compileOnly "org.projectlombok:lombok:1.18.28"
    annotationProcessor "org.projectlombok:lombok:1.18.28"
    testCompileOnly "org.projectlombok:lombok:1.18.28"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.28"

}

test {

    String includedTagsString = System.getProperty("includeTags")
    if (includedTagsString == null) {
        useJUnitPlatform()
    } else {
        useJUnitPlatform {includeTags includedTagsString}
    }
    systemProperties(System.getProperties())
//            {
//        includeTags 'login'
//    }
//    systemProperty "skip", ""
}